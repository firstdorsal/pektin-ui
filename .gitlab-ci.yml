image: node:latest

stages:
    - mirror
    - docker-build

mirror:
    stage: mirror
    script:
        #github
        - USERNAME=firstdorsal
        - git config --global user.email "runner@$CI_SERVER_HOST"
        - git config --global user.name "runner"
        - git fetch --unshallow origin || true
        - git remote remove origin
        - git remote add origin https://${USERNAME}:$GITHUB_TOKEN@github.com/$CI_PROJECT_PATH.git
        - echo " " >> .gitlab-ci.yml
        - git add -A
        - git commit -m "ðŸ¤– mirror [skip ci]"
        - curl -u "${USERNAME}:$GITHUB_TOKEN" https://api.github.com/user/repos -d "{\"name\":\"$CI_PROJECT_NAME\"}"
        - curl --request PATCH -u "${USERNAME}:$GITHUB_TOKEN" https://api.github.com/repos/${USERNAME}/$CI_PROJECT_NAME -d "{\"description\":\"This is a mirror of ${CI_PROJECT_URL}\"}"
        - git push --set-upstream origin HEAD:refs/heads/master -f
        #gitlab
        - git remote remove origin
        - git remote add origin https://${USERNAME}:$GITLAB_TOKEN@gitlab.com/$CI_PROJECT_PATH.git
        - curl --request POST "https://gitlab.com/api/v4/projects?visibility=public&private_token=$GITLAB_TOKEN&name=$CI_PROJECT_NAME" ; echo
        - curl --request DELETE "https://gitlab.com/api/v4/projects/$CI_PROJECT_NAMESPACE%2F$CI_PROJECT_NAME/protected_branches/master?private_token=$GITLAB_TOKEN" ; echo
        - git push --set-upstream origin HEAD:refs/heads/master -f

docker-build:
    stage: docker-build
    image: docker:latest
    before_script:
        - export CI_REGISTRY=index.docker.io/v1
        - docker login -u "pektin" -p "$CI_REGISTRY_PASSWORD" https://$CI_REGISTRY
    script:
        - docker build --pull -t "$CI_REGISTRY/$CI_PROJECT_NAME" .
        - docker push "$CI_REGISTRY/$CI_PROJECT_NAME"
